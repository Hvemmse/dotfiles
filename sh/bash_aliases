# vim:ft=sh

alias be='bundle exec'
alias gerp='grep -rs --include=*.{js,coffee,hbs,json,rb,py} --exclude-dir={bower_components,node_modules,tmp,dist}'
alias all_vars='(set -o posix; set) | less -R'
alias cm='cd '$DOTFILE_DIR
alias cdg='cd $(git root)'
alias gemdir='cd $(gem environment gemdir)'
alias tree='tree -Ca --noreport -I ".sass-cache|.git|node_modules|bower_components|tmp|__pycache__|.virtualenv"'
alias ll='ls -la'
alias la='ls -A'
alias l='ls -CF'
alias ..='. $HOME/.bashrc'
alias stripescapes='sed -r "s/\x1B\[([0-9]{1,2}(;[0-9]{1,2})?)?[m|K]//g"'
alias vi='vim'
alias path='echo $PATH | tr ":" "\n"'
alias pythonpath='echo $PYTHONPATH | tr ":" "\n"'
alias :q='logout'
alias :e='vim'
alias ,e='vim $HOME/.vimrc'
alias which='type -a'
alias wget='wget --content-disposition'
alias loc="find . -type f -iname \"*.rb\" -exec cat {} \; | sed '/^\s*#/d;/^\s*$/d' | wc -l"
alias rbdoc="cd ~/my-ruby/src/ruby-2.1.2 && yard server -m core .yardoc-core stdlib-2.1.2 .yardoc-stdlib"

# http://superuser.com/a/560941 - default tmux rc
# http://superuser.com/a/538719 - tmux shell semicolon escapes
function default_tmux_rc { tmux -L unconfigured -f /dev/null start-server \; list-keys \; show-options -s \; show-options -g \; show-options -gw; }
function gittotal { git log --author="Max Cantor" --pretty=tformat: --numstat | awk '{ add += $1; subs += $2; loc += $1 - $2 } END { printf "added lines: %s, removed lines: %s, total lines: %s\n", add, subs, loc }' -; }
function diffcount { egrep -v "^[-+]{3}" | egrep -o "^[-+]" | sort | uniq -c; } # to be piped after a diff
function netlines { awk "/-/ { del=\$1 } /+/ { add=\$1 } END { print add - del }"; } # to be piped after diffcount()
function zipit { zip -r $1 $2 --exclude \*\.svn/\*; }
function :he { vim -c ":he $1" -c :only; }
function find_symlinks { DIR=$1; shift; find $DIR -type l -maxdepth 1 "$@"; }
function find_broken_symlinks { DIR=$1; shift; find -L $DIR -type l -maxdepth 1 "$@"; }
function copy_ssh_pubkey { REMOTE=$1; cat ~/.ssh/id_rsa.pub | ssh $REMOTE 'umask 077; cat >> .ssh/authorized_keys'; }
