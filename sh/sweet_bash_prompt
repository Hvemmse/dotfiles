# vim:ft=sh

case "$TERM" in
screen*|putty*|xterm*)
    source $DOTFILE_DIR/sh/bash_prompt_colors

    if [ "$ITERM_PROFILE" = "Presenting" ]; then
        source $DOTFILE_DIR/sh/presenting_prompt
    else
        source $DOTFILE_DIR/sh/bash_prompt_vcs_colors
        source $DOTFILE_DIR/sh/bash_git_prompt
        source $DOTFILE_DIR/sh/bash_ruby_prompt

        PS1='\[$USER_HOST_COLOR\]\u@\h '
        PS1=$PS1'\[$(get_vcs_pwd_color)\]\w\[$RESET\]'
        # If tmux is active, let it handle git prompt
        # this is disabled for now; see TMUX below
        # [ -z "$TMUX" ] && PS1=$PS1'$( $(is_vcs $git_mask) && echo -ne " $(prompt_git)" )'
        PS1=$PS1'$( $(is_vcs $git_mask) && echo -ne " $(prompt_git)" )'
        PS1=$PS1'$( (( \j > 0 )) && echo -ne " (\[$JOBS_COLOR\]\j\[$RESET\])" )'
        PS1=$PS1'$( $(has_ruby) && echo -ne " $(prompt_ruby)" )'
        PS1=$PS1': '

        # to be shared between bash_git_prompt's prompt_git and tmux_git_prompt
        PROMPT_COMMAND='_update_git_variables'

        # detect vcs for prompt coloring
        PROMPT_COMMAND+=' && set_vcs_mask'

        # one newline before printing so our output has some breathing room
        PROMPT_COMMAND+=' && echo'

        # for real though, what if I just did this and had my prompt command
        # re-evaluate my PS1 every time? it couldn't be THAT bad...
        # PROMPT_COMMAND='PS1="$(source $DOTFILE_DIR/sh/sweet_prompt)"'
    fi

    # this seems to be making my machine lock up, and additionally does not
    # gracefully handle multiple sessions attached to the same client, so I'm
    # disabling it for now.
    # if [ -n "$TMUX" ]; then
    #   PROMPT_COMMAND+='; tmux refresh-client -S'
    # fi

    if $(type -P dircolors &>/dev/null); then
        eval $(dircolors -b)
        alias ls='ls --color=auto'
    else
        # On OS X, get pleasant light blue back for directories
        export CLICOLOR=1
        export LSCOLORS=Exfxcxdxbxegedabagacad
    fi
    ;;
*)
    PS1="\u@\h \w: "
    ;;
esac


